#!/usr/bin/env bash
# IPTV indexer: builds per-channel .m3u files from iptv-org playlists.
# Layout: <ROM_ROOT>/<CC>/<genre>/<channel>.m3u
set -euo pipefail

BASE="https://iptv-org.github.io/iptv"
INDEX_URL="$BASE/index.m3u"
COUNTRY_URL="$BASE/countries"   # e.g. /countries/pt.m3u

COUNTRY_FILTER=""; GENRE_FILTER=""
FORCE=0; MAX=0; SLEEP=0.0; DEBUG=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    --country|--countries) shift; COUNTRY_FILTER="${1:-}";;
    --genre|--genres) shift; GENRE_FILTER="${1:-}";;
    --force) FORCE=1;;
    --max) shift; MAX="${1:-0}";;
    --sleep) shift; SLEEP="${1:-0.0}";;
    --debug) DEBUG=1;;
    *) echo "[iptv] Unknown option: $1" >&2; exit 2;;
  esac; shift
done

need(){ command -v "$1" >/dev/null 2>&1 || { echo "[iptv] missing: $1" >&2; exit 3; }; }
need pix_rom_location; need curl; need grep; need sed; need awk; need tr; need tee

ROM_ROOT="$(pix_rom_location iptv || true)"; [[ -n "${ROM_ROOT:-}" ]] || ROM_ROOT="$HOME/RetroPie/roms/iptv"
mkdir -p "$ROM_ROOT"

ES_DIR="$HOME/.emulationstation"
LOG_DIR="$ES_DIR/logs"; mkdir -p "$LOG_DIR"
LOG="$LOG_DIR/pix_iptv.log"; : > "$LOG"

LOGOS="$ES_DIR/downloaded_images/iptv/logos"; mkdir -p "$LOGOS"

upper_csv(){ printf '%s' "$1" | tr '[:lower:]' '[:upper:]'; }
lower_csv(){ printf '%s' "$1" | tr '[:upper:]' '[:lower:]'; }
slug(){ printf '%s' "$1" | sed -e 's/^[[:space:]]\+//;s/[[:space:]]\+$//' -e 's#/#_#g' -e 's/[[:space:]]\+/_/g' -e 's/[^A-Za-z0-9._-]/_/g'; }
in_csv(){ IFS=',' read -r -a A <<<"$1"; V="$2"; for x in "${A[@]}"; do [[ "$x" == "$V" ]] && return 0; done; return 1; }
dbg(){ [[ $DEBUG -eq 1 ]] && echo "[iptv] $*" | tee -a "$LOG" >&2; }

CF="$(upper_csv "${COUNTRY_FILTER// /}")"
GF="$(lower_csv "${GENRE_FILTER// /}")"

echo "[iptv] ROM root: $ROM_ROOT" | tee -a "$LOG"
[[ -n "$CF" ]] && echo "[iptv] filter countries: $CF" | tee -a "$LOG"
[[ -n "$GF" ]] && echo "[iptv] filter genres:    $GF" | tee -a "$LOG"
[[ $DEBUG -eq 1 ]] && echo "[iptv] DEBUG on" | tee -a "$LOG"

# Parse one M3U file; echo ONLY the count to STDOUT
process_m3u(){
  local SRC="$1" FORCE_CC="${2:-}" KEPT_LOCAL=0
  local EXT="" URL=""

  while IFS= read -r LINE || [[ -n "$LINE" ]]; do
    if [[ "$LINE" == \#EXTINF* ]]; then EXT="$LINE"; continue; fi
    [[ -z "$EXT" ]] && continue
    [[ -z "$LINE" || "$LINE" == \#* ]] && continue
    URL="$LINE"

    # extract fields
    local NAME="${EXT##*,}"; NAME="$(echo "$NAME" | sed 's/^[[:space:]]\+//;s/[[:space:]]\+$//')"
    get_attr(){ [[ "$EXT" =~ $1=\"([^\"]*)\" ]] && printf '%s' "${BASH_REMATCH[1]}" || printf ''; }
    local TVG_NAME TVG_ID TVG_LOGO GROUP TVG_COUNTRY
    TVG_NAME="$(get_attr tvg-name)"; TVG_ID="$(get_attr tvg-id)"; TVG_LOGO="$(get_attr tvg-logo)"
    GROUP="$(get_attr group-title)"; TVG_COUNTRY="$(get_attr tvg-country)"

    local DISP="${TVG_NAME:-$NAME}"
    local GEN="$(printf '%s' "${GROUP:-misc}" | tr '[:upper:]' '[:lower:]')"
    [[ "$GEN" == "sport" ]] && GEN="sports"
    local GEN_SLUG; GEN_SLUG="$(slug "$GEN")"

    local CC_RAW
    if [[ -n "$FORCE_CC" ]]; then
      CC_RAW="$FORCE_CC"
    else
      CC_RAW="$(printf '%s' "$TVG_COUNTRY" | tr '[:lower:]' '[:upper:]' | sed 's/[;|]/,/g; s/ //g')"
      [[ -z "$CC_RAW" ]] && CC_RAW="ZZ"
    fi
    IFS=',' read -r -a CARR <<<"$CC_RAW"

    # genre filter
    if [[ -n "$GF" ]]; then
      local KEEP_G=0; IFS=',' read -r -a GA <<<"$GF"
      for g in "${GA[@]}"; do [[ "$GEN" == "$g" ]] && KEEP_G=1; done
      [[ $KEEP_G -eq 0 ]] && { EXT=""; continue; }
    fi

    for CC in "${CARR[@]}"; do
      if [[ -n "$CF" ]] && ! in_csv "$CF" "$CC"; then continue; fi
      local CH_SLUG; CH_SLUG="$(slug "$DISP")"
      local OUT_DIR="$ROM_ROOT/$CC/$GEN_SLUG"
      local OUT_M3U="$OUT_DIR/${CH_SLUG}.m3u"
      mkdir -p "$OUT_DIR"

      {
        echo '#EXTM3U'
        printf '#EXTINF:-1'
        [[ -n "$TVG_ID" ]] && printf ' tvg-id="%s"' "$TVG_ID"
        printf ' tvg-name="%s"' "$DISP"
        [[ -n "$TVG_LOGO" ]] && printf ' tvg-logo="%s"' "$TVG_LOGO"
        [[ -n "$GROUP" ]] && printf ' group-title="%s"' "$GROUP"
        printf ', %s\n' "$DISP"
        echo "$URL"
      } > "$OUT_M3U"

      if [[ -n "$TVG_LOGO" ]]; then
        local EXTN="${TVG_LOGO##*.}"; EXTN="${EXTN%%\?*}"; EXTN="${EXTN,,}"
        case "$EXTN" in jpg|jpeg|png|webp|gif) :;; *) EXTN="png";; esac
        local LDIR="$LOGOS/$CC/$GEN_SLUG"; mkdir -p "$LDIR"
        local LOUT="$LDIR/${CH_SLUG}.${EXTN}"
        if [[ $FORCE -eq 1 || ! -f "$LOUT" ]]; then
          curl -fsSL --retry 2 -o "$LOUT" "$TVG_LOGO" 2>>"$LOG" || rm -f "$LOUT"
          awk "BEGIN{system(\"sleep $SLEEP\")}" >/dev/null 2>&1
        fi
      fi

      KEPT_LOCAL=$((KEPT_LOCAL+1))
      dbg "+ ${CC}/${GEN}/${DISP}"

      if [[ $MAX -gt 0 && $KEPT_LOCAL -ge $MAX ]]; then
        echo "[iptv] limit reached ($MAX) on $SRC" | tee -a "$LOG" >&2
        echo "$KEPT_LOCAL"
        return 0
      fi
    done

    EXT=""
  done < "$SRC"

  echo "$KEPT_LOCAL"
  return 0
}

TMP="$(mktemp)"; trap 'rm -f "$TMP"' EXIT
TOTAL_WRITTEN=0

if [[ -n "$CF" ]]; then
  IFS=',' read -r -a CTRY <<<"$CF"
  for CC in "${CTRY[@]}"; do
    url="$COUNTRY_URL/$(printf '%s' "$CC" | tr '[:upper:]' '[:lower:]').m3u"
    echo "[iptv] downloading $url" | tee -a "$LOG"
    if curl -fsSL "$url" -o "$TMP"; then
      dbg "$(wc -l <"$TMP") lines"
      wrote="$(process_m3u "$TMP" "$CC")"
      TOTAL_WRITTEN=$((TOTAL_WRITTEN + wrote))
    else
      echo "[iptv] WARN: failed to download $url" | tee -a "$LOG" >&2
    fi
  done
else
  echo "[iptv] downloading $INDEX_URL" | tee -a "$LOG"
  if curl -fsSL "$INDEX_URL" -o "$TMP"; then
    wrote="$(process_m3u "$TMP" "")"
    TOTAL_WRITTEN=$((TOTAL_WRITTEN + wrote))
  else
    echo "[iptv] ERROR: failed to download index" | tee -a "$LOG" >&2; exit 4
  fi
fi

echo "[iptv] Done. Channels written: $TOTAL_WRITTEN" | tee -a "$LOG"
echo "[iptv] ROM root: $ROM_ROOT" | tee -a "$LOG"
echo "[iptv] Logos in: $LOGOS" | tee -a "$LOG"
