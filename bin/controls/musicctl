#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
LOG_NAME="musicctl"; . /usr/local/bin/system/common.sh

APP="mpv"
CLASS="${CLASS:-KioskMusic}"
LOCKNAME="kiosk-music"
PATTERN="$APP.*--x11-name=${CLASS}.*--title=${CLASS}"

require_cmd mpv

# VISUALIZER=0 -> headless audio (no window)
# VISUALIZER=1 -> simple waveform visualizer in an X11 window
VISUALIZER="${VISUALIZER:-0}"

start() {
  local src="${1:-}"  # file/dir/URL/playlist
  lock_or_exit "$LOCKNAME"
  audio_prepare
  pick_size; export W H

  if [[ "$VISUALIZER" = "1" ]]; then
    # Windowed audio visualizer (very light)
    ARGS=(
      --no-video
      --force-window=yes
      --vo=gpu --gpu-context=x11
      --hwdec=no
      --x11-name="$CLASS" --title="$CLASS" --geometry="${W}x${H}+0+0"
      --osc=yes
      --mute=no
      --lavfi-complex='[aid1]showwaves=s=${W}x${H}:mode=line:colors=white[vv];[vv]format=yuv420p[vo]'
      --audio-display=yes
    )
  else
    # Pure audio (no window)
    ARGS=( --no-video --force-window=no --audio-display=no )
  fi

  [[ "${MUSICCTL_DEBUG:-0}" = "1" ]] && ARGS+=(--msg-level=all=v --v=2)

  log "exec mpv MUSIC vis=${VISUALIZER} src='${src:-<none>}'"
  if [[ -n "${src:-}" ]]; then
    exec mpv "${ARGS[@]}" -- "$src"
  else
    exec mpv "${ARGS[@]}"
  fi
}

stop()   { pkill_pat "$PATTERN"; }
status() { if pgrep_pat "$PATTERN"; then echo "running"; else echo "stopped"; fi; }
restart(){ stop; wait_for 1; start "${1:-}"; }

case "${1:-}" in
  start)   shift; start "$@";;
  stop)    stop;;
  status)  status;;
  restart) shift; restart "$@";;
  *) echo "usage: ${0##*/} {start|stop|status|restart} [FILE|DIR|URL]    (set VISUALIZER=1 for a visualizer)"; exit 2;;
esac
