#!/bin/bash
set -euo pipefail

# Try relative (repo/dev install), then fall back to canonical install path.
# shellcheck source=/dev/null
if ! source "$(dirname "${BASH_SOURCE[0]}")/system/paths" 2>/dev/null; then
  source "/opt/pix-infinity/bin/system/paths"
fi

cmd="${1:-}"; shift || true
URL="${1:-https://www.google.com}"
LOG=/tmp/kiosk.log

x_running() { pgrep -x Xorg >/dev/null; }
is_local_vt() { [[ -n "${XDG_VTNR:-}" ]]; }
say() { echo "[$(date +%T)] $*" | tee -a "$LOG" >/dev/null; }

VT="${XDG_VTNR:-noVT}"
LOCK="/tmp/kiosk.lock.vt${VT}"
exec {LOCK_FD}>"$LOCK"
if ! flock -n "$LOCK_FD"; then
  say "another kiosk already running for VT=$VT (lock=$LOCK)"
  exit 1
fi
cleanup(){ flock -u "$LOCK_FD" || true; rm -f "$LOCK" || true; }
trap cleanup EXIT INT TERM

say "kiosk called URL=${URL}; DISPLAY=${DISPLAY:-<unset>}, VT=${VT}"

release_and_exec() {
  trap - EXIT INT TERM
  flock -u "$LOCK_FD" || true
  rm -f "$LOCK" || true
  exec "$@"
}

if is_local_vt; then
  say "routing to kioskES (local VT=${VT})"
  release_and_exec /usr/local/bin/kioskES "${cmd}" "${URL}"
elif [[ -n "${DISPLAY:-}" ]] || x_running; then
  say "routing to kioskShell (X present)"
  release_and_exec /usr/local/bin/kioskShell "${cmd}" "${URL}"
else
  say "refusing: SSH context (no DISPLAY, no local VT)"
  exit 1
fi
