#!/bin/bash
set -euo pipefail

# DEBUG to /tmp/chromiumctl.log
if [[ "${CHROMIUMCTL_DEBUG:-0}" = "1" ]]; then
  exec > >(tee -a /tmp/chromiumctl.log) 2>&1
  set -x
fi

CMD="${1:-}"; shift || true

LOCK=/tmp/kiosk-chromium.lock
CLASS="KioskChromium"
CHROME="$(command -v chromium-browser || command -v chromium || echo /usr/bin/chromium-browser)"

RUNDIR="${XDG_RUNTIME_DIR:-/run/user/$(id -u)}"
: "${XDG_RUNTIME_DIR:=${RUNDIR}}"
export XDG_RUNTIME_DIR

# Persistent profile
PROFILE_DIR="$HOME/.config/chromium-kiosk"

is_running(){ pgrep -f "chromium.*--class=${CLASS}" >/dev/null; }

audio_prepare(){
  export PULSE_SERVER="unix:${XDG_RUNTIME_DIR}/pulse/native"
  if command -v pactl >/dev/null 2>&1; then
    DEF=$(pactl info 2>/dev/null | awk -F': ' '/Default Sink/{print $2}')
    HDMI=$(pactl list short sinks 2>/dev/null | awk '/hdmi|HDMI|alsa_output.*hdmi/ {print $2; exit}')
    [[ -n "${HDMI:-}" && "$DEF" != "$HDMI" ]] && pactl set-default-sink "$HDMI" || true
    pactl set-sink-mute @DEFAULT_SINK@ 0 || true
    pactl set-sink-volume @DEFAULT_SINK@ 75% || true
  fi
}

pick_size() {
  W="${W:-1920}"; H="${H:-1080}"
  if command -v xrandr >/dev/null 2>&1; then
    for _ in {1..30}; do xrandr 2>/dev/null | grep -q ' connected' && break; sleep 0.2; done
    local line dims
    line="$(xrandr 2>/dev/null | awk '/ connected primary/{print; exit}')"
    [[ -z "$line" ]] && line="$(xrandr 2>/dev/null | awk '/ connected/ && $2=="connected"{print; exit}')"
    if [[ -n "$line" ]]; then
      dims="$(awk '{for(i=1;i<=NF;i++) if ($i ~ /^[0-9]+x[0-9]+(\+|$)/){print $i; exit}}' <<<"$line")"
      dims="${dims%%+*}"
      if [[ "$dims" =~ ^([0-9]+)x([0-9]+)$ ]]; then W="${BASH_REMATCH[1]}"; H="${BASH_REMATCH[2]}"; fi
    fi
  fi
  if [[ "${KIOSK_FORCE_720:-0}" = "1" ]]; then W=1280; H=720; fi
  export W H
}

ensure_profile() {
  mkdir -p "${PROFILE_DIR}"
  # fix ownership/perms (in case the dir was created by root earlier)
  if [[ ! -O "${PROFILE_DIR}" ]]; then chown -R "$(id -u)":"$(id -g)" "${PROFILE_DIR}" || true; fi
  chmod 700 "${PROFILE_DIR}" || true
  # nuke stale chromium locks so it won't exit immediately
  rm -f "${PROFILE_DIR}/SingletonLock" \
        "${PROFILE_DIR}/SingletonCookie" \
        "${PROFILE_DIR}/SingletonSocket" \
        "${PROFILE_DIR}/SingletonDeadlock" 2>/dev/null || true
}

build_ext_flags() {
  local exts=(
    /opt/chrome-extensions/ubol-lite
    /opt/chrome-extensions/yt-fixes
    /opt/chrome-extensions/youtube-nonstop
    /opt/chrome-extensions/keyboard
  )

  local present=()
  for d in "${exts[@]}"; do
    [[ -d "$d" ]] && present+=("$d")
  done

  if (( ${#present[@]} )); then
    local csv
    csv=$(IFS=, ; echo "${present[*]}")
    echo "--disable-extensions-except=${csv} --load-extension=${csv}"
  fi
}

start(){
  URL="${1:-https://www.google.com}"
  [[ -n "${DISPLAY:-}" ]] || { echo "chromiumctl: needs X (DISPLAY unset)"; exit 1; }
  command -v "$CHROME" >/dev/null 2>&1 || { echo "chromiumctl: $CHROME not found"; exit 1; }

  exec 9>"${LOCK}"
  if ! flock -n 9; then
    pkill -f "chromium.*--class=${CLASS}" 2>/dev/null || true
    pkill -x chromium 2>/dev/null || true
    pkill -x chromium-browser 2>/dev/null || true
    sleep 0.3
    flock -w 2 9 || { echo "chromiumctl: busy"; exit 1; }
  fi

  /usr/local/bin/joypadctl start >/dev/null 2>&1 || true
  audio_prepare
  pick_size

  EXTRA=()
  # running in a secondary X on fbdev: force software path, Ozone X11
  EXTRA+=( --no-sandbox )                          # safe even for non-root
  EXTRA+=( --no-first-run --no-default-browser-check --test-type )
  EXTRA+=( --disable-gpu --disable-gpu-compositing --in-process-gpu )
  EXTRA+=( --use-gl=swiftshader --ozone-platform=x11 )
  EXTRA+=( --ignore-gpu-blocklist )
  EXTRA+=( --disable-features=VaapiVideoDecodeAccelerator,VaapiVideoDecoder )

  # (optional) extra logs while we debug
  [[ "${CHROMIUMCTL_DEBUG:-0}" = "1" ]] && EXTRA+=( --enable-logging=stderr --v=1 )

  ensure_profile

  pkill -f "chromium.*--class=${CLASS}" 2>/dev/null || true
  pkill -x chromium 2>/dev/null || true
  pkill -x chromium-browser 2>/dev/null || true

  EXT_FLAGS="$(build_ext_flags)"

  exec "$CHROME" \
  --kiosk \
  --autoplay-policy=no-user-gesture-required \
  --user-data-dir="${PROFILE_DIR}" \
  --profile-directory=Default \
  --password-store=basic \
  --window-position=0,0 \
  --window-size="${W},${H}" \
  --enable-features=UseOzonePlatform \
  --ozone-platform=x11 \
  --class="${CLASS}" \
  --enable-virtual-keyboard \
  --disable-features=ChromeWhatsNewUI,WelcomeUI \
  ${EXT_FLAGS:+$EXT_FLAGS} \
  --new-window \
  "${URL}"
}

stop(){
  pkill -f "chromium.*--class=${CLASS}" 2>/dev/null || true
  pkill -x chromium 2>/dev/null || true
  pkill -x chromium-browser 2>/dev/null || true
  /usr/local/bin/joypadctl stop >/dev/null 2>&1 || true
}

status(){ is_running && echo "running" || echo "stopped"; }

case "$CMD" in
  start) start "$@" ;;
  stop) stop ;;
  restart) stop; start "$@" ;;
  status) status ;;
  *) echo "usage: chromiumctl {start URL|stop|restart URL|status}"; exit 2 ;;
esac
