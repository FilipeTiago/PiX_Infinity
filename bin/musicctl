#!/bin/bash
set -euo pipefail

[[ "${MUSICCTL_DEBUG:-0}" = "1" ]] && { exec > >(tee -a /tmp/musicctl.log) 2>&1; set -x; }

CMD="${1:-}"; shift || true
LOCK=/tmp/kiosk-music.lock

is_running(){ pgrep -x mpv >/dev/null; }

VIS="${MUSIC_VIS:-showspectrum=s=1280x720:mode=combined:color=rainbow:scale=log}"
MPV_BASE=(
  --fs --hwdec=auto-safe --osd-level=1
  --keep-open=no --idle=no --loop-playlist=no
  --no-video=no --force-window=yes
  --audio-display=no
  --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes
  --volume-max=150
  --no-config
)

start(){
  target="${1:-}"
  [[ -n "${DISPLAY:-}" ]] || { echo "musicctl: needs X"; exit 1; }
  command -v mpv >/dev/null || { echo "musicctl: mpv not found"; exit 1; }
  [[ -n "$target" ]] || { echo "musicctl: need file or folder"; exit 2; }

  # single-instance lock
  exec 9>"$LOCK"; flock -n 9 || { pkill -x mpv 2>/dev/null || true; sleep 0.2; flock -w 2 9 || exit 1; }

  /usr/local/bin/joypadctl start >/dev/null 2>&1 || true
  pkill -x mpv 2>/dev/null || true

  # If given a file, build a playlist from its folder; else play the folder
  if [[ -f "$target" ]]; then
    dir="$(dirname "$target")"
    sel="$(basename "$target")"
  else
    dir="$target"
    sel=""
  fi

  # Build playlist (audio extensions)
  mapfile -d '' files < <(find -L "$dir" -maxdepth 1 -type f \( \
     -iname '*.mp3' -o -iname '*.flac' -o -iname '*.m4a' -o -iname '*.aac' -o -iname '*.ogg' -o -iname '*.opus' -o -iname '*.wav' \) -print0 | sort -z )
  pl="$XDG_RUNTIME_DIR/kiosk-music.$$.m3u"
  : > "$pl"
  for f in "${files[@]}"; do printf '%s\n' "$f" >> "$pl"; done

  # index of selected file (if any)
  idx=0
  if [[ -n "$sel" ]]; then
    for i in "${!files[@]}"; do
      if [[ "$(basename "${files[$i]}")" == "$sel" ]]; then idx="$i"; break; fi
    done
  fi

  # Visualizer
  VIS_OPT=(--lavfi-complex="[aid1]asplit=2[ao][a];[a]${VIS}[vo]")

  exec mpv "${MPV_BASE[@]}" "${VIS_OPT[@]}" \
     --playlist="$pl" --playlist-start="$idx" \
     ${MUSIC_LOG:+--log-file=/tmp/mpv-music.log --msg-level=all=v}
}

stop(){ pkill -x mpv 2>/dev/null || true; /usr/local/bin/joypadctl stop >/dev/null 2>&1 || true; }
status(){ is_running && echo running || echo stopped; }

case "${CMD}" in
  start) start "$@" ;;
  stop) stop ;;
  restart) stop; start "$@" ;;
  status) status ;;
  *) echo "usage: musicctl {start FILE|FOLDER|stop|restart|status}"; exit 2 ;;
esac
