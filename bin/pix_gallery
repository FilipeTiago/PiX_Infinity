#!/usr/bin/env bash
# Usage: pix_gallery <path-to-image-or-folder>
# Opens the selected image then slideshows the rest of the images in that folder.

set -Eeuo pipefail

need(){ command -v "$1" >/dev/null 2>&1 || { echo "[gallery] missing: $1" >&2; exit 2; }; }
need pix_antimicrox_profile; need mpv; need find; need sort

IMG_DURATION="${PIX_GALLERY_DURATION:-5}"   # seconds per image; override via env
TARGET="${1:-}"

[ -n "$TARGET" ] || { echo "[gallery] no target given"; exit 2; }

# Resolve to absolute path (portable-ish)
abspath() { python3 - "$1" <<'PY' 2>/dev/null || readlink -f "$1"
import os,sys; print(os.path.realpath(sys.argv[1]))
PY
}
TARGET_ABS="$(abspath "$TARGET")"

if [ -d "$TARGET_ABS" ]; then
  DIR="$TARGET_ABS"
  START_IMG=""   # unknown; will start from first
else
  DIR="$(dirname "$TARGET_ABS")"
  START_IMG="$TARGET_ABS"
fi

# Build playlist of images in the directory (case-insensitive, natural sort)
tmp_pl="$(mktemp)"
trap 'rm -f "$tmp_pl"' EXIT
# shellcheck disable=SC2016
find "$DIR" -maxdepth 1 -type f \( \
  -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' -o -iname '*.bmp' -o -iname '*.gif' -o -iname '*.webp' \
\) -print0 \
| sort -z \
| while IFS= read -r -d '' f; do
    printf '%s\n' "$f"
  done >"$tmp_pl"

# Count & find index of the selected image (if any)
count=$(wc -l < "$tmp_pl" || echo 0)
[ "$count" -gt 0 ] || { echo "[gallery] no images in: $DIR"; exit 1; }

playlist_start=0
if [ -n "${START_IMG:-}" ]; then
  i=0
  while IFS= read -r line; do
    [ "$line" = "$START_IMG" ] && { playlist_start="$i"; break; }
    i=$((i+1))
  done < "$tmp_pl"
fi

# Run mpv under the MPV antimicrox profile; loop forever
exec pix_antimicrox_profile --profile mpv -- \
  mpv --no-config --fs --quiet \
      --image-display-duration="$IMG_DURATION" \
      --loop-playlist=inf --osc=no --osd-level=0 --keep-open=no \
      --playlist-start="$playlist_start" --playlist="$tmp_pl"
