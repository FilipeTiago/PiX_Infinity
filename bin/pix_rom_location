#!/usr/bin/env bash
# Print the ROM path for a given EmulationStation system name.
# Usage:
#   pix_rom_location <system-name> [--images]
set -euo pipefail

CFG="${ES_CFG:-$HOME/.emulationstation/es_systems.cfg}"
MODE="roms"

usage(){ echo "usage: $(basename "$0") <system-name> [--images]" >&2; exit 2; }

[[ $# -lt 1 || $# -gt 2 ]] && usage
SYS="$1"
[[ "${2-}" == "--images" ]] && MODE="images"
[[ $# -eq 2 && "$MODE" != "images" ]] && usage

[[ -f "$CFG" ]] || { echo "error: config not found: $CFG" >&2; exit 3; }

# Extract ROM path for system
rom_path="$(
  awk -v sys="$SYS" '
    BEGIN{inblk=0;hit=0}
    /<system[> ]/ {inblk=1;hit=0;next}
    /<\/system>/  {inblk=0;hit=0;next}
    inblk && /<name>/ {
      n=$0; sub(/^.*<name>[[:space:]]*/,"",n); sub(/[[:space:]]*<\/name>.*$/,"",n)
      if(n==sys) hit=1; next
    }
    inblk && hit && /<path>/ {
      p=$0; sub(/^.*<path>[[:space:]]*/,"",p); sub(/[[:space:]]*<\/path>.*$/,"",p)
      print p; exit
    }' "$CFG"
)"
[[ -n "${rom_path:-}" ]] || { echo "error: system '$SYS' not found or missing <path> in $CFG" >&2; exit 4; }

# Trim + expand ~
rom_path="$(printf '%s' "$rom_path" | sed -E 's/^[[:space:]]+|[[:space:]]+$//g')"
rom_path="${rom_path/#\~/$HOME}"

# Normalize if we can (handles spaces safely)
abs_rom="$rom_path"
if command -v realpath >/dev/null 2>&1; then
  abs_rom="$(realpath -m -- "$rom_path" 2>/dev/null || echo "$rom_path")"
fi

if [[ "$MODE" == "roms" ]]; then
  echo "$abs_rom"
  exit 0
fi

# MODE=images
# Primary: parent-of-"roms" if present
if [[ "$abs_rom" =~ /roms(/|$) ]]; then
  base="$(sed -E 's#/roms(/.*)?$##' <<<"$abs_rom")"
  candidate="$base/downloaded_images/$SYS"
else
  # Generic: grandparent of the ROM directory
  #   e.g. /mnt/Nas/Infinity/videos -> /mnt/Nas/downloaded_images/videos
  #        /home/u/RetroPie/roms/services -> /home/u/RetroPie/downloaded_images/services
  parent="$(dirname -- "$abs_rom")"
  grandparent="$(dirname -- "$parent")"
  # guard against reaching '/'
  if [[ -z "$grandparent" || "$grandparent" == "/" ]]; then
    candidate="$HOME/.emulationstation/downloaded_images/$SYS"
  else
    candidate="$grandparent/downloaded_images/$SYS"
  fi
fi

# Fallback if not writable
fallback="${PIX_IMAGES_ROOT:-$HOME/RetroPie/downloaded_images}/$SYS"
if mkdir -p -- "$candidate" 2>/dev/null && [[ -w "$candidate" ]]; then
  echo "$candidate"
else
  mkdir -p -- "$fallback" >/dev/null 2>&1 || true
  echo "$fallback"
fi
