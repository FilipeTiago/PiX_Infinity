#!/usr/bin/env bash
set -u

CFG="${1:?usage: pix_moonlight /path/to/file.moon}"
DBG=/tmp/moonlight-es-debug.log
USRLOG="/tmp/moonlight-$(whoami).log"

kv() { sed -n -E "s/^[[:space:]]*$1[[:space:]]*=[[:space:]]*(.*)\$/\1/p" "$CFG" | head -n1; }

HOST="$(kv host)"; APP="$(kv app)"
RES="$(kv res)"; FPS="$(kv fps)"
CODEC="$(kv codec)"; BR="$(kv bitrate)"
MAPPING="$(kv mapping)"; SURROUND="$(kv surround)"
LOCALAUDIO="$(kv localaudio)"; REMOTE="$(kv remote)"

: "${RES:=1080}"; : "${FPS:=60}"; : "${CODEC:=h264}"; : "${BR:=20000}"

echo "===== $(date) ====="           >> "$DBG"
echo "argv: $CFG"                    >> "$DBG"
echo "user=$(whoami) uid=$(id -u)"   >> "$DBG"

# Force KMS/GBM path (no desktop)
unset DISPLAY WAYLAND_DISPLAY XDG_SESSION_TYPE XAUTHORITY
export XDG_RUNTIME_DIR="/run/user/$(id -u)"
export SDL_VIDEODRIVER="kmsdrm"
export MOONLIGHT_FORCE_KMS=1

# **The key bit**: ensure SDL audio initializes even on a bare VT
#export SDL_AUDIODRIVER="${SDL_AUDIODRIVER:-dummy}"
#echo "SDL_AUDIODRIVER=$SDL_AUDIODRIVER" >> "$DBG"

# --- AUDIO SETUP ---
# Optional key in .moon: audio=pulse | audio=alsa | audio=alsa:hw:1,0 | audio=dummy
AUDIO_PREF="$(kv audio || true)"

pick_pulse() {
  export SDL_AUDIODRIVER=pulse
  # Make sure we point at the user Pulse/pipewire-pulse socket
  : "${XDG_RUNTIME_DIR:=/run/user/$(id -u)}"
  export PULSE_SERVER="unix:${XDG_RUNTIME_DIR}/pulse/native"
}

pick_alsa() {
  export SDL_AUDIODRIVER=alsa
  # If user specified an ALSA device, honor it (e.g. audio=alsa:hw:1,0)
  if [[ "$AUDIO_PREF" =~ ^alsa: ]]; then
    export AUDIODEV="${AUDIO_PREF#alsa:}"
  fi
}

case "${AUDIO_PREF,,}" in
  pulse|pulseaudio) pick_pulse ;;
  alsa|"")          pick_alsa  ;;
  dummy)            export SDL_AUDIODRIVER=dummy ;;
  alsa:*)           pick_alsa  ;;
  *)                pick_alsa  ;;
esac

# Auto-fallbacks if the chosen backend is unavailable
if [[ "${SDL_AUDIODRIVER}" = "pulse" ]]; then
  if ! ( command -v pactl >/dev/null 2>&1 && pactl info >/dev/null 2>&1 ) \
     && [[ ! -S "${PULSE_SERVER#unix:}" ]]; then
    # No pulse server reachable -> fall back to ALSA
    pick_alsa
  fi
fi

# If ALSA selected but no devices, fall back to dummy (prevents blocking video)
if [[ "${SDL_AUDIODRIVER}" = "alsa" ]]; then
  if ! aplay -l >/dev/null 2>&1; then
    export SDL_AUDIODRIVER=dummy
  fi
fi

echo "SDL_AUDIODRIVER=$SDL_AUDIODRIVER AUDIODEV=${AUDIODEV-}" >> "$DBG"
# --- end AUDIO SETUP ---

# Optional manual DRM selection via env
if [[ -n "${MOONLIGHT_DRM_INDEX:-}" ]]; then
  export SDL_VIDEO_KMSDRM_DEVICE_INDEX="$MOONLIGHT_DRM_INDEX"
elif [[ -n "${MOONLIGHT_DRM_CARD:-}" ]]; then
  [[ "$MOONLIGHT_DRM_CARD" =~ /dev/dri/card([0-9]+) ]] && export SDL_VIDEO_KMSDRM_DEVICE_INDEX="${BASH_REMATCH[1]}"
fi

# Prevent console blanking
if tty | grep -qE '^/dev/tty[0-9]+'; then
  setterm -blank 0 -powerdown 0 || true
fi

args=(/usr/local/bin/moonlight stream -verbose -debug)
[[ -n "$APP" ]] && args+=(-app "$APP")
case "$RES" in
  720|1080|4k) args+=(-"$RES");;
  *x*) W="${RES%x*}"; H="${RES#*x}"; [[ "$W" =~ ^[0-9]+$ && "$H" =~ ^[0-9]+$ ]] && args+=(-width "$W" -height "$H") || args+=(-1080);;
  *) args+=(-1080);;
esac
[[ -n "$FPS" ]]      && args+=(-fps "$FPS")
[[ -n "$CODEC" ]]    && args+=(-codec "$CODEC")
[[ -n "$BR" ]]       && args+=(-bitrate "$BR")
[[ -n "$MAPPING" ]]  && args+=(-mapping "$MAPPING")
[[ -n "$SURROUND" ]] && args+=(-surround "$SURROUND")
[[ "${LOCALAUDIO,,}" == "yes" || "${LOCALAUDIO,,}" == "true" ]] && args+=(-localaudio)
[[ -n "$REMOTE"   ]] && args+=(-remote "$REMOTE")
args+=("$HOST")

echo "Launching: ${args[*]}" >> "$DBG"
"${args[@]}" 2>&1 | tee -a "$USRLOG"
RC=${PIPESTATUS[0]}
echo "Moonlight rc=$RC" >> "$DBG"
exit $RC
