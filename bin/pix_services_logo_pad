#!/usr/bin/env bash
set -euo pipefail

need(){ command -v "$1" >/dev/null 2>&1 || { echo "[svc-pad] missing: $1" >&2; exit 2; }; }
need convert; need jq

SIZE=256         # final square canvas
INNERPCT=90      # logo will be scaled to this % of SIZE (keeps some margin)
FORCE=0
while [ $# -gt 0 ]; do
  case "$1" in
    --size) SIZE="${2:-256}"; shift 2;;
    --inner) INNERPCT="${2:-90}"; shift 2;;
    --force) FORCE=1; shift;;
    *) echo "[svc-pad] unknown arg: $1" >&2; exit 2;;
  esac
done

LOGO_DIR="$HOME/.emulationstation/downloaded_images/services/logos"
META_DIR="$HOME/.emulationstation/downloaded_images/services/meta"

[ -d "$LOGO_DIR" ] || { echo "[svc-pad] no logos dir: $LOGO_DIR"; exit 1; }
mkdir -p "$META_DIR"

INNER=$(( SIZE * INNERPCT / 100 ))

pad_one() {
  local in="$1" out="$2"
  mkdir -p "$(dirname "$out")"
  convert "$in" -alpha on \
    -resize "${INNER}x${INNER}" \
    -background none -gravity center \
    -extent "${SIZE}x${SIZE}" -strip "$out"
}

count=0; changed=0; skipped=0; errors=0

# Prefer going through meta so we know which file maps to which service
while IFS= read -r -d '' m; do
  name="$(basename "$m" .json)"
  img="$(jq -r '.image // empty' "$m")"
  # If meta has no image, try to discover any logo file by base name
  if [ -z "$img" ]; then
    for ext in png jpg jpeg webp gif ico; do
      cand="$LOGO_DIR/$name.$ext"
      [ -f "$cand" ] && { img="$cand"; break; }
    done
    [ -z "$img" ] && { skipped=$((skipped+1)); continue; }
  fi

  out="$LOGO_DIR/$name.png"
  count=$((count+1))

  if [ "$FORCE" -ne 1 ] && [ -f "$out" ]; then
    # already normalized
    skipped=$((skipped+1))
    continue
  fi

  if pad_one "$img" "$out"; then
    # update meta to point to padded PNG
    tmp="$(mktemp)"
    jq --arg image "$out" '.image = $image' "$m" >"$tmp" && mv "$tmp" "$m"
    changed=$((changed+1))
    echo "[svc-pad] + $name  -> $(basename "$out")"
  else
    echo "[svc-pad] ! FAILED: $img" >&2
    errors=$((errors+1))
  fi
done < <(find "$META_DIR" -type f -name '*.json' -print0 | sort -z)

echo "[svc-pad] Done. total:$count  changed:$changed  skipped:$skipped  errors:$errors  size:${SIZE}px inner:${INNER}px"
