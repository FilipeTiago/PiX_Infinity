#!/bin/bash
set -euo pipefail

# DEBUG to /tmp/galleryctl.log
if [[ "${GALLERYCTL_DEBUG:-0}" = "1" ]]; then
  exec > >(tee -a /tmp/galleryctl.log) 2>&1
  set -x
fi

CMD="${1:-}"; shift || true
LOCK=/tmp/kiosk-gallery.lock

is_running(){ pgrep -x feh >/dev/null; }

start(){
  TARGET="${1:-.}"
  [[ -z "${DISPLAY:-}" ]] && { echo "galleryctl: needs X (DISPLAY unset)"; exit 1; }
  command -v feh >/dev/null 2>&1 || { echo "galleryctl: feh not found"; exit 1; }

  # robust single-instance lock
  exec 9>"${LOCK}"
  if ! flock -n 9; then
    pkill -x feh 2>/dev/null || true
    sleep 0.3
    flock -w 2 9 || { echo "galleryctl: busy"; exit 1; }
  fi

  /usr/local/bin/joypadctl start >/dev/null 2>&1 || true
  pkill -x feh 2>/dev/null || true

  if [[ -f "$TARGET" ]]; then
    DIR="$(dirname "$TARGET")"
    START_OPT=(--start-at "$TARGET")
  else
    DIR="$TARGET"
    START_OPT=()
  fi

  exec feh \
    --fullscreen \
    --auto-rotate \
    --draw-filename \
    --slideshow-delay 10 \
    --sort filename \
    "${START_OPT[@]}" "$DIR"
}

stop(){
  pkill -x feh 2>/dev/null || true
  /usr/local/bin/joypadctl stop >/dev/null 2>&1 || true
}

status(){ is_running && echo "running" || echo "stopped"; }

case "$CMD" in
  start)   start "$@" ;;
  stop)    stop ;;
  restart) stop; start "$@" ;;
  status)  status ;;
  *) echo "usage: galleryctl {start PATH|stop|restart PATH|status}"; exit 2 ;;
esac
