#!/bin/bash
set -euo pipefail

# Debug: DEBUG=1 kiosk -iptv <file>
[[ "${DEBUG:-0}" = "1" ]] && { exec > >(tee -a /tmp/iptvctl.log) 2>&1; set -x; }

export LANG=${LANG:-en_GB.UTF-8}
export LC_ALL=${LC_ALL:-en_GB.UTF-8}

CMD="${1:-}"; shift || true
LOCK=/tmp/kiosk-iptv.lock

is_running(){ pgrep -x mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes >/dev/null; }

# Read first http(s) URL in file (skip comments/blank lines)
first_http_url() {
  while IFS= read -r line; do
    line=${line%$'\r'}                    # strip CR if present
    [[ "$line" =~ ^[[:space:]]*# ]] && continue
    if [[ "$line" =~ ^[[:space:]]*(https?://[^[:space:]]+) ]]; then
      printf '%s\n' "${BASH_REMATCH[1]}"
      return 0
    fi
  done < "$1"
  return 1
}

start(){
  local target="${1:-}"
  [[ -n "${DISPLAY:-}" ]] || { echo "iptvctl: needs X (DISPLAY unset)"; exit 1; }
  command -v mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes >/dev/null || { echo "iptvctl: mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes not found"; exit 1; }
  [[ -n "$target" ]] || { echo "iptvctl: need a .m3u/.m3u8/.strm file"; exit 2; }

  # If ES passed a backslash-escaped path, try to unescape common chars
  if [[ ! -e "$target" && "$target" == *\\* ]]; then
    local unesc="$target"
    unesc="${unesc//\\ / }"   # space
    unesc="${unesc//\\(/(}"   # (
    unesc="${unesc//\\)/)}"   # )
    # add more here later if needed: \{ \} \[ \] \& \!
    [[ -e "$unesc" ]] && target="$unesc"
  fi

  [[ -e "$target" ]] || { echo "iptvctl: file not found: $target"; exit 2; }

  # single-instance lock
  exec 9>"$LOCK"
  if ! flock -n 9; then
    pkill -x mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes 2>/dev/null || true
    sleep 0.3
    flock -w 2 9 || { echo "iptvctl: busy"; exit 1; }
  fi

  /usr/local/bin/joypadctl start >/dev/null 2>&1 || true
  pkill -x mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes 2>/dev/null || true

  local UA="${IPTV_UA:-Mozilla/5.0 (X11; Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome Safari}"
  local REF="${IPTV_REFERER:-}"
  local ext="${target##*.}"; ext="${ext,,}"

  # If .m3u, honor EXTVLCOPT hints (user-agent/referrer) if present
  if [[ "$ext" == "m3u" || "$ext" == "m3u8" ]]; then
    local ua_opt ref_opt
    ua_opt="$(grep -i '^#EXTVLCOPT:http-user-agent=' "$target" 2>/dev/null | tail -1 | cut -d= -f2- || true)"
    ref_opt="$(grep -i '^#EXTVLCOPT:http-referrer='  "$target" 2>/dev/null | tail -1 | cut -d= -f2- || true)"
    [[ -n "$ua_opt" ]]  && UA="$ua_opt"
    [[ -n "$ref_opt" ]] && REF="$ref_opt"
  fi

  # Try to resolve a direct URL from the file; if none, fall back to playlist mode
  local SRC="" USE_PLAYLIST=0
  if [[ "$ext" == "m3u" || "$ext" == "m3u8" || "$ext" == "strm" ]]; then
    if SRC="$(first_http_url "$target")"; then
      :
    else
      USE_PLAYLIST=1
      SRC="$target"
    fi
  else
    SRC="$target"
  fi

  IPC="${XDG_RUNTIME_DIR:-$RUNDIR}/mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes-video.sock"

  # mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes opts
  MPV_OPTS=(
    --fs --hwdec=auto-safe --osd-level=1
    --cache=yes --cache-secs=5
    --idle=no --keep-open=no --loop=no
    --user-agent="$UA"
  )
  [[ -n "$REF" ]] && MPV_OPTS+=(--http-header-fields="Referer: $REF")

  # Reconnect support if available (safe fallback)
  if mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-ipc-server="$IPC" --list-options 2>/dev/null | grep -qx reconnect-streams; then
    MPV_OPTS+=(--reconnect-streams=yes)
  elif mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-ipc-server="$IPC" --list-options 2>/dev/null | grep -qx stream-lavf-o; then
    MPV_OPTS+=(--stream-lavf-o=reconnect_streamed=1,reconnect_on_network_error=1)
  fi

  [[ "${DEBUG:-0}" = "1" ]] && MPV_OPTS+=(--log-file=/tmp/mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes-iptvctl.log --msg-level=all=v)

  if [[ "$USE_PLAYLIST" = 1 ]]; then
    exec mpv --input-ipc-server="$IPC" --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes "${MPV_OPTS[@]}" --playlist="$SRC"
  else
    exec mpv --input-ipc-server="$IPC" --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes "${MPV_OPTS[@]}" "$SRC"
  fi
}

stop(){ 
	printf '{"command":["quit"]}\n' | socat - "UNIX-CONNECT:$IPC" 2>/dev/null || true
	pkill -x mpv --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes --input-cursor=yes --input-default-bindings=yes --input-vo-keyboard=yes 2>/dev/null || true; /usr/local/bin/joypadctl stop >/dev/null 2>&1 || true; 
}
status(){ is_running && echo "running" || echo "stopped"; }

case "${CMD}" in
  start)   start "$@" ;;
  stop)    stop ;;
  restart) stop; start "$@" ;;
  status)  status ;;
  *) echo "usage: iptvctl {start FILE|stop|restart FILE|status}"; exit 2 ;;
esac
