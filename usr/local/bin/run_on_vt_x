#!/bin/bash
# usage: run_on_vt_x <VT> <client> [args...]
set -euo pipefail

VT="${1:?usage: run_on_vt_x <VT> <client> [args...]}"
shift

# Map VT→display; vt7→:1, vt8→:2, etc. Override with KIOSK_XNUM if you like.
XNUM="${KIOSK_XNUM:-$(( VT >= 7 ? VT-6 : 1 ))}"
BACKVT="${KIOSK_BACK_VT:-1}"

LOGDIR="$HOME/.local/share/xorg"
RLOG="/tmp/run_on_vt_x.log"
mkdir -p "$LOGDIR"
XLOG="${LOGDIR}/Xorg-vt${VT}.log"

log(){ echo "[$(date +%T)] $*" | tee -a "$RLOG" >/dev/null; }

log "=== run_on_vt_x start === VT=${VT} XNUM=${XNUM} BACKVT=${BACKVT}"
log "client: $*"
log "XLOG: ${XLOG}"

# Sanity: VT device present?
if [[ ! -e "/dev/tty${VT}" ]]; then
  log "ERROR: /dev/tty${VT} not found"
  exit 1
fi

# Prefer openvt (gives X a controlling TTY even from odd contexts)
# NOTE: Must be run from the local console for best results.
if command -v openvt >/dev/null 2>&1; then
  log "openvt -f -s -w -c ${VT} -- xinit ... :${XNUM} vt${VT}"
  exec /usr/bin/openvt -f -s -w -c "${VT}" -- \
    /usr/bin/xinit "$@" -- ":${XNUM}" vt"${VT}" \
      -keeptty -nolisten tcp -verbose 3 -logfile "${XLOG}"
else
  # Fallback: try chvt + xinit (requires the caller to be on a real TTY)
  log "FALLBACK chvt ${VT} ; xinit ... :${XNUM} vt${VT}"
  /bin/chvt "${VT}"
  /usr/bin/xinit "$@" -- ":${XNUM}" vt"${VT}" -keeptty -nolisten tcp -verbose 3 -logfile "${XLOG}"
  RC=$?
  log "xinit exited rc=${RC}; switching back to VT ${BACKVT}"
  /bin/chvt "${BACKVT}" || true
  exit "${RC}"
fi
